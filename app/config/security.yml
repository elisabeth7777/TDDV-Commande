security:
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        TDDV\UserBundle\Entity\User: sha512

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_TECHNICIEN, ROLE_VISITEUR]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
      main:
            id: fos_user.user_provider.username
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#                    test: { password: testpass, roles: [ 'ROLE_USER' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false     
        # On crée un pare-feu uniquement pour le formulaire
        main_login:
            # Cette expression régulière permet de prendre /login (mais pas /login_check !)
            pattern:   ^/login$
            # On autorise alors les anonymes sur ce pare-feu 
            anonymous: true      
        main:
            pattern:   ^/
            anonymous: false
            provider:  main
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
            logout:
                path:   fos_user_security_logout
                target: /
            remember_me:
                key:        %secret% 
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
#        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
